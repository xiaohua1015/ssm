<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
	namespace：必须与对应的接口全类名一致
	id:必须与对应接口的某个对应的方法名一致
 -->
<mapper namespace="cn.isdev.ssm.dao.IUserDao">

    <!-- 匹配bean 与数据库表的字段名-->
    <resultMap id="user" type="User">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="password" column="password"/>
    </resultMap>

    <insert id="save" parameterType="User">
        insert into user(name,password) values(#{name},#{password})
    </insert>

    <update id="update" parameterType="User">
        update user set name=#{name},password=#{password} where id=#{id}
    </update>

    <delete id="delete" parameterType="int">
        delete from user where id=#{id}
    </delete>

    <!-- mybsits_config中配置的alias类别名,也可直接配置resultType为类路劲 -->
    <select id="findById" parameterType="int" resultType="User">
        select id,name, password from user where id=#{id}
    </select>

    <select id="findAll" resultType="User">
        select id,name,password from user
    </select>

    <select id="findPageList" resultType="User">
        select id, name, password from user where name like #{name} limit #{pstart}, #{psize}
    </select>


    <!--
        <select id="findAll" parameterType="map" resultMap="studentMap">
            select * from students
            <where>
                <if test="pid!=null">
                    and students_id = #{pid}
                </if>
                <if test="pname!=null">
                    and students_name = #{pname}
                </if>
                <if test="psal!=null">
                    and students_sal = #{psal}
                </if>
            </where>
        </select>
        <update id="dynaUpdate" parameterType="map">
            update students
            <set>
                <if test="pname!=null">
                    students_name = #{pname},
                </if>
                <if test="psal!=null">
                    students_sal = #{psal},
                </if>
            </set>
            where students_id = #{pid}
        </update>-->
        <!--<delete id="dynaDeleteArray">
            delete from students where students_id in
             foreach用于迭代数组元素
             open表示开始符号
             close表示结束符合
             separator表示元素间的分隔符
             item表示迭代的数组，属性值可以任意，但提倡与方法的数组名相同
             #{ids}表示数组中的每个元素值
            <foreach collection="array" open="(" close=")" separator="," item="ids">
                #{ids}
            </foreach>
         </delete>
         -->
    <!-- sql片段对应字段名,id属性值任意 -->
    <sql id="key">
        <!-- 去掉最后一个, -->
        <trim suffixOverrides=",">
            <if test="id!=null">
                students_id,
            </if>
            <if test="name!=null">
                students_name,
            </if>
            <if test="sal!=null">
                students_sal,
            </if>
        </trim>
    </sql>


    <!-- sql片段对应?,id属性值任意 -->
    <sql id="value">
        <!-- 去掉最后一个, -->
        <trim suffixOverrides=",">
            <if test="id!=null">
                #{id},
            </if>
            <if test="name!=null">
                #{name},
            </if>
            <if test="sal!=null">
                #{sal},
            </if>
        </trim>
    </sql>





    <!-- <include refid="key"/>和<include refid="value"/>表示引用上面定义的sql片段 -->
    <!--<insert id="dynaInsert" parameterType="cn.itcast.javaee.mybatis.app14.Student">
        insert into students(<include refid="key"/>) values(<include refid="value"/>)
    </insert>
-->
</mapper>
